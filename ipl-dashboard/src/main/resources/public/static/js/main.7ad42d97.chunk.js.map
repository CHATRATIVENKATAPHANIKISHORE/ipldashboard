{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","fetch","response","json","data","fetchTeam","title","value","totalMatches","totalWins","color","slice","map","id","process","YearSelector","years","i","push","year","MatchPage","setMatches","fetchMatches","TeamTile","HomePage","teams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ad42d97.chunk.js","sourcesContent":["import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./MatchDetailCard.scss\";\r\n\r\n\r\nexport const  MatchDetailCard = ({teamName, match}) => {\r\n  if(!match) return null;\r\n  const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n    const otherTeamRoute =`/teams/${otherTeam}`;\r\n    const isMatchWon = teamName === match.matchWinner;\r\n  return (\r\n    \r\n    <div className={isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card'}>\r\n    <div> \r\n       \r\n     \r\n\t  \r\n    <span className=\"vs\"> vs </span>\r\n    <h1>  <Link to={otherTeamRoute}> {otherTeam}</Link> </h1>\r\n    <h2 className=\"match-date\">{match.date} </h2>\r\n    <h3 className=\"match-venue\"> at {match.venue}</h3>\r\n    <h3 className=\"match-result\"> {match.matchWinner} won by {match.resultMargin}  {match.result} </h3>\r\n    </div> \r\n    <div className=\"additional-detail\">\r\n    <h3>First Innings</h3>\r\n    <p> {match.team1}</p>\r\n    <h3>Second Innings</h3>\r\n    <p> {match.team2}</p>\r\n    <h3>Man of The Match</h3>\r\n    <p> {match.playerOfMatch}</p>\r\n    <h3>Umpires</h3>\r\n    <p> {match.umpire1}, {match.umpire2}</p>\r\n    </div >\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MatchDetailCard;\r\n","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./MatchSmallCard.scss\";\r\nexport const  MatchSmallCard = ({match, teamName}) => {\r\n\r\n  const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n  const otherTeamRoute =`/teams/${otherTeam}`;\r\n  const isMatchWon = teamName === match.matchWinner;\r\n  return (\r\n    <div className={isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard lost-card'}>\r\n      <span className=\"vs\"> vs </span>\r\n    <h1>  <Link to={otherTeamRoute}> {otherTeam}</Link> </h1>\r\n      <p className=\"match-result\"> {match.matchWinner} won by {match.resultMargin}  {match.result} </p>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MatchSmallCard;\r\n","import { React, useEffect, useState } from 'react';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport { MatchSmallCard }  from '../components/MatchSmallCard';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport './TeamPage.scss' ;\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\n\r\n\r\nexport const  TeamPage = () => {\r\n  const [team, setTeam] = useState({matches: []});\r\n  const { teamName } = useParams();\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(\r\n    () => {\r\n      const fetchTeam = async() =>\r\n      {\r\n        const response = await fetch(`/team/${teamName}`);\r\n        const data = await response.json();\r\n        setTeam(data);\r\n      }\r\n      fetchTeam();\r\n    }, [teamName]\r\n\r\n  );\r\n\r\n  if(!team || !team.teamName){\r\n    return <h1> Team not found </h1> \r\n  }\r\n  return (\r\n    <div className=\"TeamPage\">\r\n      <div className=\"team-name-section\"><h1 className=\"team-name\"> {team.teamName}</h1></div>\r\n      <div className=\"win-loss-section\"> Wins / Losses\r\n      <PieChart\r\n        data={[\r\n            { title: 'Losses', value: team.totalMatches - team.totalWins, color: '#a34d5d' },\r\n            { title: 'Wins', value: team.totalWins, color: '#4da375' }\r\n            \r\n            \r\n          ]}\r\n        />\r\n      \r\n       </div>\r\n      <div className=\"match-detail-section\" >\r\n         <h3> Latest Matches </h3>\r\n      <MatchDetailCard teamName={team.teamName} match={team.matches[0]} />\r\n    </div>\r\n      {team.matches.slice(1).map(match => <MatchSmallCard key={match.id} teamName={team.teamName} match={match} />)} \r\n       <div className=\"more-link\">\r\n         <Link to ={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More </Link>\r\n         \r\n       </div>\r\n       \r\n       </div>\r\n  );\r\n}\r\n\r\nexport default TeamPage;\r\n","\r\nimport { React } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport './YearSelector.scss';\r\n\r\n\r\nexport const  YearSelector = ({teamName}) => {\r\n\tlet years = [];\r\n\tconst startYear = process.env.REACT_APP_DATA_START_YEAR;\r\n\tconst endYear = process.env.REACT_APP_DATA_END_YEAR;\r\n\t \r\n\tfor(let i = startYear; i <=  endYear; i++ ){\r\n\t\tyears.push(i);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ol  className=\"YearSelector\">\r\n\r\n\t\t{ years.map(year => (\r\n\t\t<li key={year}>\r\n\t\t\t<Link   to ={`/teams/${teamName}/matches/${year}`}>{year}</Link>\r\n\t\t\t\t\r\n\t\t\t\t</li>) )}\r\n\t\t</ol>\r\n\t)\r\n}\r\nexport default YearSelector;","import { React, useEffect, useState } from 'react';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\n\r\nimport { useParams } from 'react-router-dom';\r\nimport'./MatchPage.scss';\r\nimport { YearSelector } from '../components/YearSelector';\r\nexport const  MatchPage = () => {\r\n  \r\n   const[matches, setMatches]=useState([]);\r\n   const { teamName, year }=useParams();\r\n   useEffect(\r\n    () => {\r\n      const fetchMatches = async() =>\r\n      {\r\n        const response = await fetch(`/team/${teamName}/matches?year=${year}`);\r\n        const data = await response.json();\r\n        setMatches(data);\r\n      };\r\n      fetchMatches();\r\n    }, [teamName, year]\r\n\r\n  );\r\n  \r\n  return (\r\n    <div className=\"MatchPage\">\r\n      <div className=\"year-selector\">\r\n        <h3> Select year</h3>\r\n      <YearSelector teamName={teamName} />\r\n\r\n      </div>\r\n      \r\n      <div>\r\n        <h1 className=\"page-heading\"> {teamName} matches in {year} </h1> \r\n      {\r\n            matches.map(match => <MatchDetailCard key={match.id} teamName={teamName} match={match} />)\r\n      }\r\n      </div>\r\n       </div>\r\n  );\r\n}\r\n\r\nexport default MatchPage;\r\n","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './TeamTile.scss';\r\nexport const  TeamTile = ({teamName}) => {\r\n\treturn(\r\n\t\t<div className=\"TeamTile\"> \r\n\t\t<h1>\r\n\t\t<Link to={`/teams/${teamName}`}>  \r\n\t\t\r\n\t\t{teamName}\r\n\t\t</Link>\r\n\t\t</h1>\r\n\t\t</div>\r\n\t);\r\n}\r\n ","import { React, useEffect, useState } from 'react';\r\n\r\nimport './HomePage.scss' ;\r\n\r\nimport { TeamTile } from '../components/TeamTile';\r\n\r\n\r\nexport const  HomePage = () => {\r\n  const [teams, setTeam] = useState([]);\r\n  \r\n\r\n\r\n\r\n\r\n\r\n  useEffect(\r\n    () => {\r\n      const fetchAllTeams = async() =>\r\n      {\r\n        const response = await fetch(`/team`);\r\n        const data = await response.json();\r\n        setTeam(data);\r\n      }\r\n      fetchAllTeams();\r\n    }, []\r\n\r\n  );\r\n\r\n  \r\n  return (\r\n    <div className=\"HomePage\">\r\n      <div className=\"header-section\"><h1 className=\"app-name\"> Indian Premier League Dashboard </h1></div>\r\n      <div className=\"team-grid\">\r\n\t\t  { teams.map(team => <TeamTile key={team.id} teamName={team.teamName} />)\r\n}\r\n\t  </div>\r\n\t  </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport './App.scss';\nimport { TeamPage } from '../src/pages/TeamPage';\nimport { MatchPage } from '../src/pages/MatchPage';\nimport { HomePage } from '../src/pages/HomePage';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/teams/:teamName/matches/:year\">\n\n           <MatchPage />\n        </Route>\n\n        <Route path=\"/teams/:teamName\">\n\n           <TeamPage />\n        </Route>\n        <Route path=\"/\">\n          <HomePage />\n           \n        </Route>\n         \n     </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}